@page "/loginform"
@using System.Net.Http.Headers
@using System.IO;
@using System.Text
@inject HttpClient HttpClient
@inject AuthService AuthService

<h1>ログイン</h1>

<div class="content">

	<div class="requestform">

		<EditForm Model="loginInfo" OnValidSubmit="OnOK">

			<DataAnnotationsValidator />

			<div class="tab-content">

				<table class="input-table">
					<tr>
						<td class="input-td">お名前</td>
						<td class="input-td"><input class="input-general" type="text" @bind="loginInfo.Name" /></td>
					</tr>
					<tr>
						<td class="input-td">パスワード</td>
						<td class="input-td"><input class="input-general" type="text" @bind="loginInfo.Password" /></td>
					</tr>
				</table>

			</div>

			<div class="actions">
				<button class="default-button">ログイン</button>
			</div>

			<div class="error-message">
				<ValidationSummary></ValidationSummary>
			</div>

		</EditForm>

	</div>

</div>


@code {
	// ====================================================================
	// private 変数
	// ====================================================================

	// ログインのために入力するユーザー情報
	private LoginInfo loginInfo = new();

	// ====================================================================
	// private 関数
	// ====================================================================

	// --------------------------------------------------------------------
	// 有効な状態で検索ボタンクリック
	// --------------------------------------------------------------------
	private async Task OnOK()
	{
		try
		{
			using HttpResponseMessage response = await HttpClient.PostAsJsonAsync(YbdConstants.URL_API + "user/login/", loginInfo);
			String? token = await response.Content.ReadAsStringAsync();

			if (!String.IsNullOrEmpty(token))
			{
				var authenticationHeader = new AuthenticationHeaderValue(
					"Bearer", token.Trim('"')
				);
				HttpClient.DefaultRequestHeaders.Authorization = authenticationHeader;
			}

			await AuthService.LoginAsync(new LoginInfo());

			NavigationManager.NavigateTo("/mypage");
		}
		catch (Exception excep)
		{
			ClientCommon.NavigateToClientError(NavigationManager, excep);
		}
	}

}
