@page "/info"
@inject AuthService AuthService
@inject PlayerService PlayerService
@inject RequestSongService RequestSongService
@inject SearchService SearchService
@inject ThumbnailService ThumbnailService

<h1>デモの状態</h1>
<div class="content">

	<div class="tab-content">
		<table class="input-table">
			<tr>
				<td class="input-td">予約可能曲データベース：</td>
				<td class="input-td">@((MarkupString)searchStatus)</td>
			</tr>
			<tr>
				<td class="input-td">サムネイルデータベース：</td>
				<td class="input-td">@((MarkupString)thumbnailStatus)</td>
			</tr>
			<tr>
				<td class="input-td">予約一覧データベース：</td>
				<td class="input-td">@((MarkupString)requestStatus)</td>
			</tr>
			<tr>
				<td class="input-td">登録ユーザーデータベース：</td>
				<td class="input-td">@((MarkupString)userStatus)</td>
			</tr>
			<tr>
				<td class="input-td">Player：</td>
				<td class="input-td">@((MarkupString)playerStatus)</td>
			</tr>
		</table>
	</div>

</div>

<h1 >参考情報</h1>
<div class="content">

	<ul>
		<li><a href="https://github.com/shinta0806/YukariBlazorDemo" target="_blank">ゆかり Blazor WebAssembly デモ GitHub</a></li>
	</ul>

</div>

@code {

	// ====================================================================
	// protected 関数
	// ====================================================================

	// --------------------------------------------------------------------
	// 初期化が完了した
	// --------------------------------------------------------------------
	protected override async Task OnInitializedAsync()
	{
		try
		{
			searchStatus = await SearchService.StatusAsync();
			thumbnailStatus = await ThumbnailService.StatusAsync();
			requestStatus = await RequestSongService.StatusAsync();
			userStatus = await AuthService.StatusAsync();
			playerStatus = await PlayerService.StatusAsync();
		}
		catch (Exception excep)
		{
			ClientCommon.NavigateToClientFatalError(NavigationManager, excep);
		}
	}

	// ====================================================================
	// private 定数
	// ====================================================================

	// ====================================================================
	// private 変数
	// ====================================================================

	// 各種状態
	private String searchStatus = ClientConstants.DIV_MINI_LOADING;
	private String thumbnailStatus = ClientConstants.DIV_MINI_LOADING;
	private String requestStatus = ClientConstants.DIV_MINI_LOADING;
	private String userStatus = ClientConstants.DIV_MINI_LOADING;
	private String playerStatus = ClientConstants.DIV_MINI_LOADING;

}
