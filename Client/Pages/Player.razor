@page "/player"
@inject NavigationManager NavigationManager
@inject PlayerService PlayerService

<div class="content">

	<div class="tab-content">
		<div class="player-status">@playStatus</div>
		<div>@songName</div>
	</div>

	<form>
		<div class="actions">
			<button class="general-button" type="button" @onclick="OnClickPrev">&#9665;&#9665;　前の曲</button>
			<button class="default-button" type="button" @onclick="OnClickPlayOrPause">&#9654;　再生／一時停止</button>
			<button class="general-button" type="button" @onclick="OnClickNext">&#9655;&#9655;　次の曲</button>
		</div>
	</form>

	<div>@playResult</div>

</div>

@code {
	private RequestSong? playingSong;

	private String? playResult;

	private String? playStatus;

	private String? songName;

	protected override async Task OnInitializedAsync()
	{
		try
		{
			await UpdateStatusAsync();
		}
		catch (Exception excep)
		{
			Debug.WriteLine(excep.Message);
			Debug.WriteLine(excep.StackTrace);
		}
	}

	private async Task UpdateStatusAsync()
	{
		playingSong = await PlayerService.GetPlayingSongAsync();
		if (playingSong == null)
		{
			playStatus = "停止中";
		}
		else
		{
			if (playingSong.PlayStatus == PlayStatus.Playing)
			{
				playStatus = "再生中";
			}
			else
			{
				playStatus = "一時停止中";
			}
			songName = playingSong.SongName;
		}
	}

	private async void OnClickPlayOrPause()
	{
		try
		{
			HttpResponseMessage message = await PlayerService.PlayOrPauseAsync();
			if (message.IsSuccessStatusCode)
			{
				await UpdateStatusAsync();
			}
			else
			{
				playResult = "再生できませんでした。";
			}
			StateHasChanged();
		}
		catch (Exception)
		{

		}
	}

	private async void OnClickNext()
	{
		try
		{
			HttpResponseMessage message = await PlayerService.NextAsync();
			if (message.IsSuccessStatusCode)
			{
				await UpdateStatusAsync();
			}
			else
			{
				playResult = "再生できませんでした。";
			}
			StateHasChanged();
		}
		catch (Exception)
		{

		}

	}

	private async void OnClickPrev()
	{
		try
		{
			HttpResponseMessage message = await PlayerService.PrevAsync();
			if (message.IsSuccessStatusCode)
			{
				await UpdateStatusAsync();
			}
			else
			{
				playResult = "再生できませんでした。";
			}
			StateHasChanged();
		}
		catch (Exception)
		{

		}

	}

}
