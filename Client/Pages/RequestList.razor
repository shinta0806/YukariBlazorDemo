@page "/"
@inject NavigationManager NavigationManager
@inject RequestSongService RequestSongService
@using System
@using System.IO
@using System.Text
@using System.Web

@{
	Debug.Assert(YbdConstants.SEARCH_DETAIL_CONDITION_NAMES.Length == (Int32)SearchDetailCondition.__End__, "bad SEARCH_DETAIL_CONDITION_NAMES length.");
	Debug.Assert(YbdConstants.SEARCH_DETAIL_PARAM_NAMES.Length == (Int32)SearchDetailCondition.__End__, "bad SEARCH_DETAIL_PARAM_NAMES length.");
	Debug.Assert(YbdConstants.SEARCH_RESULT_SORT_NAMES.Length == (Int32)SearchResultSort.__End__, "bad SEARCH_RESULT_SORT_NAMES length.");
}

<div class="content">

	<table class="req-list-table">
		<tr class="req-list-tr">
			<th class="req-list-th">No.</th>
			<th class="req-list-th">サムネイル</th>
			<th class="req-list-th">曲名</th>
			<th class="req-list-th">予約者</th>
			<th class="req-list-th">コメント</th>
		</tr>

		@foreach (RequestSong requestSong in requestSongs)
		{
			String trClassName;
			String playIcon = String.Empty;
			switch (requestSong.PlayStatus)
			{
				case PlayStatus.Unplayed:
					trClassName = "req-list-tr-unplayed";
					break;
				case PlayStatus.Playing:
					trClassName = "req-list-tr-playing";
					playIcon = "<span class='play-icon'>&#9654;</span>";
					break;
				case PlayStatus.Pause:
					trClassName = "req-list-tr-pause";
					playIcon = "<span class='play-icon'>||</span>";
					break;
				default:
					trClassName = "req-list-tr-played";
					break;
			}

			<tr class="@trClassName" @key="requestSong.Id">
				<td class="req-list-td"><div class="req-list-no">@((MarkupString)playIcon)@requestSong.Sort</div></td>
				<td class="req-list-td"><div class="req-list-thumb"><img src="/api/thumbnail/@Uri.EscapeDataString(requestSong.Path)" /></div></td>
				<td class="req-list-td">
					<div class="req-list-song">@requestSong.SongName</div>
					@{
						String misc = requestSong.ArtistName;
						if (!String.IsNullOrEmpty(requestSong.TieUpName))
						{
							misc += " / " + requestSong.TieUpName;
						}
					}
					<div class="req-list-misc">@misc</div>
					<div class="req-list-path">@Path.GetFileName(requestSong.Path.Replace('\\', '/'))</div>
				</td>
				<td class="req-list-td">@requestSong.User</td>
				<td class="req-list-td">@requestSong.Comment</td>
			</tr>
		}
	</table>

</div>

@code {

	// ====================================================================
	// protected 関数
	// ====================================================================

	// --------------------------------------------------------------------
	// 初期化が完了した
	// --------------------------------------------------------------------
	protected override async Task OnInitializedAsync()
	{
		try
		{
			requestSongs = await RequestSongService.GetRequestSongsAsync();
		}
		catch (Exception excep)
		{
			ClientCommon.NavigateToClientError(NavigationManager, excep);
		}
	}

	// ====================================================================
	// private 変数
	// ====================================================================

	// 予約曲群
	private IEnumerable<RequestSong> requestSongs = new RequestSong[0];

}
