@page "/searchform/{Detail?}"
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime


<div class="content">

	<div class="searchform">
		<EditForm Model="word" OnValidSubmit="OnOK">

			<DataAnnotationsValidator />

			@{
				// タブ
				TabItem[] tabItems =
				{
					new TabItem("なんでも検索", "/searchform"),
					new TabItem("詳細検索", "/searchform/detail"),
				};

				if (String.IsNullOrEmpty(Detail))
				{
					// なんでも検索
					word.Type = SearchWordType.AnyWord;

					@((MarkupString)ClientCommon.GenerateTabHeader(tabItems, "なんでも検索"))
					<div class="tab-content">
						<table class="input-table">
							<tr>
								<td class="input-td">キーワード</td>
								<td class="input-td"><input class="input-general" id="keyword" type="text" @bind="word.AnyWord" /></td>
							</tr>
							<tr>
								<td class="input-td"></td>
								<td class="input-td"><div class="supplement">曲名、歌手名、タイアップ名、ファイル名の一部をキーワードにして検索できます。<br />「mp4」をキーワードにすると多くの動画を検索できます。</div></td>
							</tr>
						</table>
					</div>
				}
				else
				{
					// 詳細検索
					word.Type = SearchWordType.Detail;

					// ToDo: @bind="word.DetailValues[i]" がうまくいかない
					@((MarkupString)ClientCommon.GenerateTabHeader(tabItems, "詳細検索"))
					<div class="tab-content" id="detail-content">
						<table class="input-table">
							<tr>
								<td class="input-td">曲名</td>
								<td class="input-td"><input class="input-general" id="song-name" type="text" @bind="word.SongName" /></td>
							</tr>
							<tr>
								<td class="input-td">タイアップ名</td>
								<td class="input-td"><input class="input-general" type="text" @bind="word.TieUpName" /></td>
							</tr>
							<tr>
								<td class="input-td">歌手名</td>
								<td class="input-td"><input class="input-general" type="text" @bind="word.ArtistName" /></td>
							</tr>
							<tr>
								<td class="input-td">制作会社</td>
								<td class="input-td"><input class="input-general" type="text" @bind="word.Maker" /></td>
							</tr>
							<tr>
								<td class="input-td">カラオケ動画制作者</td>
								<td class="input-td"><input class="input-general" type="text" @bind="word.Worker" /></td>
							</tr>
							<tr>
								<td class="input-td">ファイル名</td>
								<td class="input-td"><input class="input-general" type="text" @bind="word.Path" /></td>
							</tr>
						</table>
					</div>
				}
			}

			<div class="actions">
				<button class="default-button">検索</button>
			</div>

			<div class="error-message">
				<ValidationSummary></ValidationSummary>
			</div>
		</EditForm>
	</div>

</div>

@code {
	[Parameter]
	public String? Detail { get; set; }

	private String? prevDetail = "__Init__";

	private SearchWord word = new SearchWord();

	private void OnOK()
	{
		NavigationManager.NavigateTo($"/searchresult/{word}");
	}

#if true
	protected override async Task OnAfterRenderAsync(Boolean firstRender)
	{
		if (prevDetail != Detail)
		{
			//await Focus("keyword");
			//var yes = await JSRuntime.InvokeAsync<bool>("confirm", "削除してもよろしいですか?");
			//var yes = await JSRuntime.InvokeAsync<string>("exampleJsFunctions.showPrompt", "calling showPrompt");
			//var yes = await JSRuntime.InvokeAsync<string>("MyMessage", "calling MyMessage");
			String id;
			if (word.Type == SearchWordType.AnyWord)
			{
				id = "keyword";
			}
			else
			{
				id = "song-name";
			}
			await JSRuntime.InvokeVoidAsync("MySetFocus2", id);
			prevDetail = Detail;
		}
	}
#endif

#if false
// たぶんレンダリング途中の bind でも呼びだされていて、id が見つからずに null 参照になるっぽい
protected override async Task OnParametersSetAsync()
{
if (prevDetail != Detail)
{
String id;
if (word.Type == SearchWordType.AnyWord)
{
id = "keyword";
}
else
{
id = "song-name";
}
await JSRuntime.InvokeVoidAsync("MySetFocus2", id);
prevDetail = Detail;
}
}
#endif


#if false
private async Task Focus(string controlId)
{
	await JSRuntime.InvokeAsync<bool>("MySetFocus", controlId);
}
#endif

}


